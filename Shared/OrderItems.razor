@page "/OrderItems"
@using MudBlazor
@using MudBlazor.Extensions

<MudGrid>
    <MudItem xs="12">
        <MudPaper>
            <MudList Clickable="false">
                @foreach (var person in People)
                {
                    <MudListItem>
                        <MudListItemText>
                            <MudText Typo="Typo.h6">@person.Name</MudText>
                        </MudListItemText>
                        <MudButton OnClick="@(() => AddCategory())" Variant="Variant.Outlined">Add Category</MudButton>
                    </MudListItem>
                }
                <MudListItem>
                    <MudListItemText>
                        <MudText Typo="Typo.h6">Total Price: @TotalPrice</MudText>
                    </MudListItemText>
                </MudListItem>
            </MudList>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    private List<Person> People { get; set; }
    private OrderItem DraggedItem { get; set; }
    private decimal TotalPrice => People.SelectMany(p => p.OrderItems).Sum(item => item.Price * item.Quantity);
    protected override void OnInitialized()
    {
        People = new List<Person>
        {
            new Person
            {
                Name = "Alice",
                OrderItems = new List<OrderItem>
                {
                    new OrderItem { Name = "Apple", Price = 1.5m, Quantity = 3 },
                    new OrderItem { Name = "Orange", Price = 1.0m, Quantity = 5 }
                }
            },
            new Person
            {
                Name = "Bob",
                OrderItems = new List<OrderItem>
                {
                    new OrderItem { Name = "Banana", Price = 0.5m, Quantity = 7 },
                    new OrderItem { Name = "Grapes", Price = 2.0m, Quantity = 2 }
                }
            }
        };
    }

    private void AddCategory()
    {
        People.Add(new Person { Name = $"Person {People.Count + 1}", OrderItems = new List<OrderItem>() });
    }

    private void OnDragStart(OrderItem item)
    {
        DraggedItem = item;
    }

    private void OnDrop(OrderItem targetItem, Person targetPerson)
    {
        if (DraggedItem != null && DraggedItem != targetItem)
        {
            var sourcePerson = People.FirstOrDefault(p => p.OrderItems.Contains(DraggedItem));
            if (sourcePerson != null)
            {
                sourcePerson.OrderItems.Remove(DraggedItem);
                int targetIndex = targetPerson.OrderItems.IndexOf(targetItem);
                targetPerson.OrderItems.Insert(targetIndex, DraggedItem);
            }
        }
    }

    public class Person
    {
        public string Name { get; set; }
        public List<OrderItem> OrderItems { get; set; }
    }

    public class OrderItem
    {
        public string Name { get; set; }
        public decimal Price { get; set; }
        public int Quantity { get; set; }
    }
}