@page "/Customize/{ID:int}"
@page "/Customize"
@inject NavigationManager NavigationManager
@inject StateContainer StateContainer

<h3>@ID</h3>
<div style="margin:auto; text-align:center; width:80%">
  <div>
    <img style="width:100%" src="@StateContainer.itemToCustomize.image" alt="">
  </div>
  <div style="text-align: left;background-color:rgb(255, 255, 255); border: 2px solid black;">
    <p>
      <b>Description:</b> <br>
      <b>Calories:</b> <br>
      <b>Other Info:</b>
    </p>
  </div>

  <div style="text-align: center;width:100%; max-height:400px;overflow-y:scroll; border: 2px solid black;">
    <table id="ingredients-table" class="table" style="border-collapse: none ;width:100%">
      <thead>
        <tr>
          <th style="padding: 10px; border: 1px solid black;">Ingredients</th>
          <th style="padding: 10px; border: 1px solid black;">Quantity</th>
          <th style="padding: 10px; border: 1px solid black;">Action</th>
        </tr>
      </thead>
      <tbody>
        @foreach (var ingredient in Ingredients){
          @if (!ingredient.IsDisabled){
    <tr>
        <td style="padding: 10px; border: 1px solid black;">@ingredient.Name</td>
        <td style="padding: 10px; border: 1px solid black;">
            <button class="minus-btn" style="padding: 5px;" @onclick="() => DecreaseQuantity(ingredient)">-</button>
            <span class="quantity" style="padding: 0 5px;">@ingredient.Quantity</span>
            <button class="plus-btn" style="padding: 5px;" @onclick="() => IncreaseQuantity(ingredient)">+</button>
        </td>
        <td style="padding: 10px; border: 1px solid black;">
            @if (ingredient.IsDisabled)
            {
                <button class="add-btn" style="padding: 5px;" @onclick="() => AddIngredient(ingredient)">Add</button>
            }
            else
            {
                <button class="delete-btn" style="padding: 5px;" @onclick="() => DeleteIngredient(ingredient)">Delete</button>
            }
        </td>
    </tr>
}}
        @*@foreach (var ingredient in Ingredients)
        {
          <tr>
            <td style="padding: 10px; border: 1px solid black;">@ingredient.Name</td>
            <td style="padding: 10px; border: 1px solid black;">
              <button class="minus-btn" style="padding: 5px;" @onclick="() => DecreaseQuantity(ingredient)">-</button>
              <span class="quantity" style="padding: 0 5px;">@ingredient.Quantity</span>
              <button class="plus-btn" style="padding: 5px;" @onclick="() => IncreaseQuantity(ingredient)">+</button>
            </td>
            <td style="padding: 10px; border: 1px solid black;">
              <button class="delete-btn" style="padding: 5px;" @onclick="() => DeleteIngredient(ingredient)">Delete</button>
              <button class="add-btn" style="display: none; padding: 5px;" @onclick="() => AddIngredient(ingredient)">Add</button>
            </td>
          </tr>
        }*@
      </tbody>
    </table>
  </div>

<MudButton Style="margin-top:5%; margin-right: 50px; background-color: #EABC45; width: auto; height: 50px; font-size: large; color: black">Make it a Combo</MudButton>
<MudButton Style="margin-top:5%; margin-left: 50px; background-color: #EABC45; width: auto; height: 50px; font-size: large; color: black">Add to Order</MudButton>




</div>








@code {
  [Parameter]
  public int ID { get; set; }
 
  public List<Ingredient>? Ingredients { get; set; }

  protected override void OnInitialized()
  {
    // Initialize the ingredients list with some sample data
    Ingredients = new List<Ingredient>()
    {
      new Ingredient() { Name = "Lettuce", Quantity = "Regular" },
      new Ingredient() { Name = "Tomato", Quantity = "Regular" },
      new Ingredient() { Name = "Onion", Quantity = "Regular" },
      new Ingredient() { Name = "Mushroom", Quantity = "Regular" },
      new Ingredient() { Name = "Mayonese", Quantity = "Regular" },
      new Ingredient() { Name = "Chipotle", Quantity = "Regular" },
      new Ingredient() { Name = "House Sauce", Quantity = "Regular" },
      new Ingredient() { Name = "Bacon", Quantity = "Regular" },
    };
  }

  // Method to decrease the quantity of an ingredient
  private void DecreaseQuantity(Ingredient ingredient)
  {
    if (ingredient.Quantity == "Extra")
    {
      ingredient.Quantity = "Regular";
    }
    else if (ingredient.Quantity == "Regular")
    {
      ingredient.Quantity = "Less";
    }
  }

  // Method to increase the quantity of an ingredient
  private void IncreaseQuantity(Ingredient ingredient)
  {
    if (ingredient.Quantity == "Less")
    {
      ingredient.Quantity = "Regular";
    }
    else if (ingredient.Quantity == "Regular")
    {
      ingredient.Quantity = "Extra";
    }
  }
    // Method to delete an ingredient
    private void DeleteIngredient(Ingredient ingredient)
{
    ingredient.IsDisabled = true;
}
    // Method to add an ingredient
    private void AddIngredient(Ingredient ingredient)
    {
        ingredient.IsDisabled = false;
    }

    public class Ingredient
    {
        public string? Name { get; set; }
        public string? Quantity { get; set; }
        public bool IsDisabled { get; set; }
        public bool IsDeleted { get; set; } = false;
    }
}
